---
- hosts: localhost
  gather_facts: no
  vars:
    ami_id: "ami-09d95fab7fff3776c"
  module_defaults:
    group/aws:
      region: "us-east-1"
  tasks:
    - name: create a new ec2 key pair, returns generated private key
      ec2_key:
        name: my_keypair
      register: myKeypair
    - name: debug
      debug: var=myKeypair
    - name: Save private key into file
      copy:
        content: "{{ myKeypair.key.private_key }}"
        dest: "./m5-private-key.pem"
        mode: 0600
      when: myKeypair.changed
    - name: Provision Ec2 instance
      ec2:
        key_name: my_keypair
        group:
          - ig-postgres-tag-m5
          - ig-development-m5
        instance_type: t3.micro
        image: "{{ ami_id }}"
        instance_tags:
          Name: M5-ig-public-instance
          Module: 5
        wait: true
        exact_count: 1
        count_tag: M5-ig-public-instance
        vpc_subnet_id: "{{ publicSubnet1.subnet.id }}"
        assign_public_ip: yes
        user_data: "{{ lookup('file', 'UserData.sh') }}"
      register: ec2Instance
    - name: debug
      debug: var=ec2Instance
    - name: Allocate elastic IP to ec2Instance
      ec2_eip:
        in_vpc: true
        device_id: "{{ item.id }}"
        state: present
      with_items: "{{ ec2Instance.tagged_instances }}"
      register: ec2InstanceEip
    - name: debug
      debug: var=ec2InstanceEip

    - name: Create temporary ec2 instance for configuring db
      ec2:
        key_name: my_keypair
        group:
          - ig-development-m5
        instance_type: t3.micro
        image: "{{ ami_id }}"
        instance_tags:
          Name: db-config-ec2-instance
          Module: 5
        wait: true
        exact_count: 1
        count_tag: db-config-ec2-instance
        vpc_subnet_id: "{{ publicSubnet1.subnet.id }}"
        assign_public_ip: yes
        user_data: "{{ lookup('file', 'UserDataForConfigDbInstance.sh') }}"
      register: ec2InstanceConfigDb
    - name: debug
      debug: var=ec2InstanceConfigDb
